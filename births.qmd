---
editor_options: 
  chunk_output_type: console
editor:
  markdown:
    canonical: true  
---

# Births

Compare sources of births data.
Construct birth estimates.

## Setup
```{r}
#| label: setup

source(here::here("setup.R"))
```


```{r}
#| label: constants

mage_order <- c(
  "<15",
  "15-17",
  "18-19",
  "20-24",
  "25-29",
  "30-34",
  "35-39",
  "40-44",
  "45+",
  "Unknown",
  "Total"
)


```

## Get and smooth Census data on births

```{r}

coc1 <- readRDS(fs::path(DWORK, "cocwide.rds"))
glimpse(coc1)


```

### Explore Census births data

The checks below show that Census calculates birth rates as births / (avg pop of current and prior year) * 1000.
For example, birth rate in 2018 = births in 2018 / avg pop of 2018 and 2017, x 1000.

```{r}
cnty <- "Westchester" # Albany Saratoga Washington Westchester
check <- coc1 |>
  filter(stfips == "36", shortname == cnty)

check |>
  knitr::kable()

```


## Get NYSDOH births and fertility rates

```{r}

# births
fname <- "Vital_Statistics_Live_Births_by_Mother_s_Age_and_Resident_County__Beginning_2008_20250616.csv"
fpath <- fs::path(DNYG, fname)

births1 <- vroom::vroom(fpath)

```

```{r}

# fertility rates (and birth rates)
fname <- "Vital_Statistics_Live_Births_and_Fertility_Rates_by_Mother_s_Age_and_County__Beginning_2008_20250616.csv"

fpath <- fs::path(DNYG, fname)
frates1 <- vroom::vroom(fpath)
glimpse(frates1)

```

## Compare

```{r}

glimpse(coc1)
b1 <- coc1 |>
  filter(stfips == "36", geotype == "county") |>
  select(stfips, cntyfips, shortname, year, pop, abirths)

b2 <- births1 |>
  select(year = Year, shortname = County, mage = 4, births = 5) |>
  filter(mage == "Total")

b12 <- b1 |>
  full_join(b2, by = join_by(shortname, year)) |>
  filter(!is.na(pop))

cnty <- "Warren" # Albany Washington
b12 |>
  filter(shortname == cnty) |>
  pivot_longer(cols = c(abirths, births)) |>
  filter(!is.na(value)) |>
  ggplot(aes(year, value, colour = name)) +
  geom_point() +
  geom_line() +
  ggtitle(cnty)

```

## Estimate births: Apply fertility rates to women by age group

```{r}

frates2 <- frates1 |>
  filter(str_detect(Measure, "Fertility")) |>
  select(year = 1, county = 3, mage = 6, frate = 7)
count(frates2, year) # 2008-2022
tmp <- count(frates2, county) # 65:  57, 5, New York City, New York State, Rest of State; "St Lawrence" no period
count(frates2, mage)

frates3 <- frates2 |>
  filter(!county %in% c("New York City", "New York State", "Rest of State")) |>
  mutate(county = ifelse(county == "St Lawrence", "St. Lawrence", county))
tmp <- count(frates3, county) # 62


agesex1 <- readRDS(fs::path(DWORK, "cenpop_sya_sex.rds"))
tmp <- count(agesex1, area) # 62
agesex2 <- agesex1 |>
  filter(name == "popf") |>
  mutate(county = str_remove(area, " County"))
tmp <- count(agesex2, county) # 62
agesex3 <- agesex2 |>
  select(stfips, cntyfips, county, year, age, fpop = value) |>
  mutate(
    mage = case_when(
      age < 15 ~ "<15",
      age %in% 15:17 ~ "15-17",
      age %in% 18:19 ~ "18-19",
      age %in% 20:24 ~ "20-24",
      age %in% 25:29 ~ "25-29",
      age %in% 30:34 ~ "30-34",
      age %in% 35:39 ~ "35-39",
      age %in% 40:44 ~ "40-44",
      age >= 45 ~ "45+",
      .default = "ERROR"
    )
  )



  
# mutate(
#   magecut = cut(age, c(0, 15, 17, 19, 24, 29, 34, 39, 44, Inf), right = FALSE)
# )
count(agesex3, mage)
tmp <- count(agesex3, magecut, age)

magelink <- read_csv(
  "magecut, mage
[0,15), <15
[15,17), 15-17
[17,19), 18
[19,24), 
[24,29), 
[29,34), 
[34,39), 
[39,44), 
[44,Inf), 
"
)

```

