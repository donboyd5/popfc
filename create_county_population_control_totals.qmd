---
output: html_document
editor_options: 
  chunk_output_type: console
---

## Create County Population Control Totals

https://www2.census.gov/programs-surveys/popest/datasets/

```{r}
#| label: setup

libs <- function(){
  library(tidyverse)
  library(readxl)
  library(vroom)
  library(fs)
  library(skimr)
  library(Hmisc)
  library(btools)
}

suppressPackageStartupMessages(libs())
  
# ns(options())

dnysdol <- here::here("data", "nysdol")
dnysdoh <- here::here("data", "nysdoh")
dcenpop <- here::here("data", "census") # levels_components, totals

```

# Prepare datasets

For each dataset:

-   download (optionally)
-   read
-   clean as needed
-   save cleaned file

## Census Bureau Population Estimates Program -- data obtained directly from Census

### Intercensal estimates

#### download-intercensal-estimates

```{r}
#| label: download-intercensal-estimates
#| eval: false

# https://www2.census.gov/programs-surveys/popest/datasets/1970-1980/
# ...
# https://www2.census.gov/programs-surveys/popest/datasets/2010-2020/


# https://www2.census.gov/programs-surveys/popest/datasets/1970-1980/national/asrh/e7079co.zip 
url <- "https://www2.census.gov/programs-surveys/popest/datasets/1970-1980/national/asrh/e7079co.zip"
fname <- fs::path_file(url)
dir <- fs::path(dcenpop, "totals")
download.file(url, fs::path(dir, fname), mode="wb")

url <- "https://www2.census.gov/programs-surveys/popest/datasets/1980-1990/counties/totals/comp8090.zip"
fname <- fs::path_file(url)
dir <- fs::path(dcenpop, "totals")
download.file(url, fs::path(dir, fname), mode="wb")

# https://www2.census.gov/programs-surveys/popest/datasets/2000-2010/intercensal/county/co-est00int-alldata-4-25-13.pdf
# https://www2.census.gov/programs-surveys/popest/datasets/2000-2010/intercensal/county/co-est00int-sexracehisp.csv
# https://www2.census.gov/programs-surveys/popest/datasets/2000-2010/intercensal/county/co-est00int-agesex-5yr.csv

# 2000-2010 ----
# intercensal population totals
# https://www2.census.gov/programs-surveys/popest/datasets/2000-2010/intercensal/county/co-est00int-tot.csv
url <- "https://www2.census.gov/programs-surveys/popest/datasets/2000-2010/intercensal/county/co-est00int-tot.csv"
fname <- fs::path_file(url)
dir <- fs::path(dcenpop, "totals")
download.file(url, fs::path(dir, fname), mode="wb")

# intercensal age-group breakdowns that appear to foot to population totals KEY FILE
url <- "https://www2.census.gov/programs-surveys/popest/datasets/2000-2010/intercensal/county/co-est00int-agesex-5yr.csv"
fname <- fs::path_file(url)
dir <- fs::path(dcenpop, "totals")
download.file(url, fs::path(dir, fname), mode="wb")

# intercensal agegroup-sex-race-hispanic (asrh) that appear to foot to population totals
url <- "https://www2.census.gov/programs-surveys/popest/datasets/2000-2010/intercensal/county/co-est00int-sexracehisp.csv"
fname <- fs::path_file(url)
dir <- fs::path(dcenpop, "levels_components")
download.file(url, fs::path(dir, fname), mode="wb")

# 2010-2020 ----
# intercensal population totals
url <- "https://www2.census.gov/programs-surveys/popest/datasets/2010-2020/counties/totals/co-est2020.csv"
fname <- fs::path_file(url)
dir <- fs::path(dcenpop, "totals")
download.file(url, fs::path(dir, fname), mode="wb")

# intercensal population totals AND components of change, state and county -- IMPORTANT FILE
url <- "https://www2.census.gov/programs-surveys/popest/datasets/2010-2020/counties/totals/co-est2020-alldata.csv"
fname <- fs::path_file(url)
dir <- fs::path(dcenpop, "totals")
download.file(url, fs::path(dir, fname), mode="wb")

# intercensal pop totals county, city town -- IMPORTANT
# https://www2.census.gov/programs-surveys/popest/datasets/2010-2020/intercensal/cities/
# sub-est2020int.csv intercensal state county city town village (no coc)

# 2020-plus ----
# https://www2.census.gov/programs-surveys/popest/datasets/2020-2024/counties/totals/co-est2024-alldata.csv
# co-est2024-alldata.csv postcensal 2020-2024 states and counties totals and components of change

# https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/asrh/cc-est2023-alldata.csv
# cc-est2023-alldata.csv cc- not co-... postcensal needs docs 2020-2023?, year, county, age group, sex, race/h; presumably 2024 will be available

# https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/asrh/cc-est2023-syasex-36.csv
# cc-est2023-syasex-36.csv cc- not co- ... NY county 2020-2023?, year, county, single-year age, 

# https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/cities/totals/sub-est2023.csv
# sub-est2023.csv postcensal 2020-2023 states, counties, cities, towns, villages totals (not coc)

```

### Postcensal estimates

#### download postcensal estimates

```{r}
#| label: download-postcensal-estimates
#| eval: false

# cities, villages, and towns
# https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/cities/totals/

```

## NYSDOL: Annual population Census Population Estimates Program via data.ny.gov

NYS Department of Labor gets annual estimates from the Census Bureau. The data may be slightly behind what Census has currently. The [data are on data.ny.gov](https://data.ny.gov/Government-Finance/Annual-Population-Estimates-for-New-York-State-and/krt9-ym2k/about_data).

The 2025-04-20 version has county population totals for 1970-2023. The data include Census base, intercensal, and postcensal estimates. Here are counts:

![](images/paste-1.png)

There are 62 counties in the data â€“ 5 NYC counties, 57 counties, and a New York State total. Units are numbers of people (not thousands).

The raw data look like this:

![](images/paste-3.png)

### Download NYSDOL county pop

```{r}
#| label: download-nysdol-county-pop
#| eval: false

# https://data.ny.gov/Government-Finance/Annual-Population-Estimates-for-New-York-State-and/krt9-ym2k/about_data
# https://data.ny.gov/api/views/krt9-ym2k/rows.csv?accessType=DOWNLOAD

# export / api endpoint / csv / copy:
# https://data.ny.gov/resource/krt9-ym2k.csv
# add the limit:
urlbase <- "https://data.ny.gov/resource/krt9-ym2k.csv"
limit <- 50000 # 50k max
url <- paste0(urlbase, "?$limit=", limit) # all fields will be character with quotes, that's ok

# alternative link to the data found via U.S. data.gov
# https://catalog.data.gov/dataset/annual-population-estimates-for-new-york-state-and-counties-beginning-1970
# url <- "https://data.ny.gov/api/views/krt9-ym2k/rows.csv?accessType=DOWNLOAD" 

fname <- "Annual_Population_Estimates_for_New_York_State_and_Counties__Beginning_1970_20250420.csv"
download.file(url, fs::path(dnysdol, fname))

```

### Read NYSDOL county pop

```{r}
#| label: read-county-pop

# fname <- "Annual_Population_Estimates_for_New_York_State_and_Counties__Beginning_1970_20250419.csv"
fname <- "Annual_Population_Estimates_for_New_York_State_and_Counties__Beginning_1970_20250420.csv"

fpath <- fs::path(dnysdol, fname)

df <- vroom(fpath, col_types="ccicn")
glimpse(df)
summary(df) # 1970-2023

df1 <- df |> 
  select(fips=1, area=2, year=3, program=4, pop=5) |> 
  mutate(cocode = str_sub(fips, 3, -1))
count(df1, program)

```


```{r}
#| label: explore-nysdol-population
#| output: true

cocodes <- count(df1, fips, cocode, area)

# 091, 113 115
codes <- c("083", "091", "113", "115")

df1 |> 
  filter(cocode %in% codes) |> 
  ggplot(aes(year, pop)) +
  geom_line() +
  geom_point() +
  facet_wrap(~cocode + area, scales = "free_y")

baseyear <- 2010
df1 |> 
  filter(cocode %in% codes, year >= baseyear) |> 
  mutate(ipop = pop / pop[year == baseyear] - 1, .by=cocode) |> 
  ggplot(aes(year, ipop, colour=area)) +
  geom_line() +
  geom_point() +
  geom_hline(yintercept = 0) +
  scale_y_continuous(breaks = seq(-.2, .2, .02), 
                     labels = scales::label_percent())

df1 |> 
  filter(cocode=="115") |> 
  arrange(year) |> 
  tail()

```



### Explore NYSDOL county pop

### Save NYSDOL county pop

## Census Components of Change

https://www.census.gov/programs-surveys/popest.html https://www.census.gov/programs-surveys/popest/data/data-sets.html

https://www.census.gov/programs-surveys/international-programs/events/training/select-topics-in-international-population-health/demographic-change.html

### 2010-2019

https://www.census.gov/data/tables/time-series/demo/popest/2010s-counties-total.html

```{r}
#| label: 2010-2019-coc
#| eval: false

# https://www2.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2010-2019/cc-est2019-alldata.pdf

fname <- "co-est2019-alldata.csv"
fpath <- fs::path(dcenpop, fname)

# the rate variables must be per thousand I think

df <- vroom(fpath, col_types = cols(.default = col_character()))

tmp <- df |>
  rename_with(str_to_lower) |> 
  filter(state == "36", county == "115")
tmp |> 
  pivot_longer(cols = -c(sumlev:ctyname)) |> 
  filter(str_detect(name, "2018"))

tmp |> 
  pivot_longer(cols = -c(sumlev:ctyname)) |> 
  filter(str_detect(name, "rdeath")) # rnatural rnetmig

vars <-  c("rbirth", "rdeath", "rnetmig")
vars <-  c("rbirth", "rdeath", "rinternationalmig", "rdomesticmig")
vars <-  c("rbirth", "rdeath", "rinternationalmig", "rdomesticmig", "rnaturalinc")


tmp |> 
  pivot_longer(cols = -c(sumlev:ctyname)) |> 
  mutate(year = str_sub(name, -4, -1) |> as.integer(),
         var = str_remove(name, as.character(year)),
         value = as.numeric(value),
         value = value / 1000,
         value = ifelse(var == "rdeath", -value, value)) |> 
  filter(var %in% vars) |> 
  ggplot(aes(year, value, colour = var)) +
  geom_line(size=1) +
  geom_point(size=2) +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = 2010:2020) +
  scale_y_continuous(breaks = seq(-.01, .02, .002), labels = scales::label_percent()) +
  ggtitle("Change in population by cause as % of starting (?) population")

```

### 2020-2024

https://www.census.gov/data/datasets/time-series/demo/popest/2020s-counties-total.html https://www2.census.gov/programs-surveys/popest/tables/2020-2024/counties/totals/co-est2024-comp.xlsx https://www2.census.gov/programs-surveys/popest/datasets/2020-2024/counties/totals/co-est2024-alldata.csv

```{r}
#| label: 2020-2024-coc
#| eval: false

# url <- "https://www2.census.gov/programs-surveys/popest/tables/2020-2024/counties/totals/co-est2024-comp.xlsx"
url <- "https://www2.census.gov/programs-surveys/popest/datasets/2020-2024/counties/totals/co-est2024-alldata.csv"
fname <- fs::path_file(url)
download.file(url, fs::path(dcenpop, fname), mode="wb")


```

## NYS DOH New York State Population Data: Beginning 2003 -- age group, gender, race/ethnicity counties by year

https://health.data.ny.gov/Health/New-York-State-Population-Data-Beginning-2003/e9uj-s3sf/about_data https://www.health.ny.gov/statistics/vital_statistics/

> Population data file is provided as an additional reference file when interpreting vital statistics death rates. The population data is derived from the corresponding release of the NCHS annual estimates of "Bridged Race Vintage" which are consistent with the Bureau of the Census estimates from "Vintage" (released in the summer). For more information, check out: http://www.health.ny.gov/statistics/vital_statistics/. The "About" tab contains additional details concerning this dataset.

```{r}
#| label: nysdoh
#| eval: false

fname <- "New_York_State_Population_Data__Beginning_2003_20250419.csv"
fpath <- fs::path(dnysdoh, fname)

df <- vroom(fpath, col_types = cols(.default = col_character()))
glimpse(df)
Hmisc::describe(df)
skim(df)


df1 <- df |> 
  select(year=1, 
         fagegroup=2, agegroup=3,
         fgender=4, gender=5,
         frethnic=6, rethnic=7, 
         cocode=8, area=9,
         pop=10) |> 
  mutate(across(c(year, fagegroup, fgender, frethnic), as.integer),
         pop = as.numeric(pop))
summary(df1)
count(df1, fagegroup, agegroup) # changes
count(df1 |> filter(year==max(year)), fagegroup, agegroup) # changes
count(df1, fgender, gender) # good 0 is total
count(df1, frethnic, rethnic) # good 0 is total
tmp <- count(df1, cocode, area) # Washington is 61

# put latest age codes on the data
agecodes <- df1 |> 
  filter(year==max(year)) |> 
  select(fagegroup, agegroup) |> 
  distinct() |> 
  arrange(fagegroup)
agecodes


df2 <- df1 |> 
  select(-agegroup) |> 
  left_join(agecodes, by = join_by(fagegroup))

df2 |> 
  filter(cocode=="61", fgender==0, frethnic==0) |> 
  mutate(pct=pop / pop[fagegroup == 0],
         .by=c(year, cocode)) |> 
  filter(fagegroup != 0) |> 
  ggplot(aes(year, pct, colour=agegroup)) +
  geom_line() +
  geom_point()

# fct_collapse(gss_cat$partyid,
#   missing = c("No answer", "Don't know"),
#   other = "Other party",
#   rep = c("Strong republican", "Not str republican"),
#   ind = c("Ind,near rep", "Independent", "Ind,near dem"),
#   dem = c("Not str democrat", "Strong democrat")
  
df3 <- df2 |> 
  filter(cocode=="61", fgender==0, frethnic==0) |> 
  mutate(pct=pop / pop[fagegroup == 0],
         .by=c(year, cocode)) |> 
  filter(fagegroup != 0) |> 
  mutate(fagegroup = as.factor(fagegroup),
         agegroup2 = fct_collapse(fagegroup,
                              age_00_19 = 1:3,
                              age_20_34 = 4:5,
                              age_35_44 = 6,
                              age_45_54 = 7,
                              age_55_64 = 8,
                              age_65_74 = 9,
                              age_75_99 = 10:11)) |> 
  summarise(pct = sum(pct),
            .by = c(year, cocode, area, agegroup2))
                              
df3 |>
  ggplot(aes(year, pct, colour=agegroup2)) +
  geom_line() +
  geom_point() +
  scale_y_continuous(limits=c(0, NA_real_),
                     breaks=seq(0, 30, .02))


```


## Local Area Unemployment Statistics: Beginning 1990 (data documentation says 1976)

https://data.ny.gov/Economic-Development/County-Employment-Data/4v74-29eq/about_data

Needs seasonal adjustment

```{r}
#| label: laus
#| eval: false

url <- "https://data.ny.gov/api/odata/v4/4v74-29eq"
url <- "https://data.ny.gov/d/4v74-29eq"

# discovered by going to export / api endpoint and experimenting

# https://support.socrata.com/hc/en-us/articles/202949268-How-to-query-more-than-1000-rows-of-a-dataset
# limit of 50k recs per query
limit <- 50000 # 50k max; LAUS has about 26k records now, so no problem
url <- paste0("https://data.ny.gov/resource/4v74-29eq.csv?$limit=", limit) # all fields will be character with quotes, that's ok
fname_base <- "County_Employment_Data_"
fname <- paste0(fname_base, today(), ".csv")
fpath <- fs::path(dnysdol, fname)
download.file(url, fpath, mode = "wb")

# fname <- "County_Employment_Data_20250419.csv"
# fpath <- fs::path(dnysdol, fname)

df <- vroom(fpath, skip=1, col_names=c("area", "year", "month", "lf", "emp", "unemp", "ur"), col_types="ciinnnn")
glimpse(df)
summary(df)

areas <- count(df, area) # just the 62 counties

df1 <- df |> 
  mutate(date = as.Date(paste0(year, "-", month, "-1")),
         area = str_remove(area, " County"))
count(df1, date)
summary(df1) # through Feb 2025

counties <- c("Saratoga", "Warren", "Washington")
df1 |> 
  filter(area %in% counties) |> 
  filter(year(date) >= 2022) |> 
  ggplot(aes(date, ur, colour=area)) +
  geom_line() +
  geom_point()

df1 |>  
  filter(area %in% counties) |> 
  filter(year(date) >= 2022) |> 
  ggplot(aes(date, lf)) +
  geom_line() +
  geom_point() +
  facet_wrap(~area, scales = "free_y")


```

## QCEW

```{r}
#| label: qcew
#| eval: false

# https://statistics.labor.ny.gov/qcew.zip


```

## Occupational and industry projections NYSDOL

https://dol.ny.gov/long-term-occupational-projections https://data.ny.gov/Economic-Development/Long-Term-Occupational-Projections/pqm4-9qqb/about_data https://data.ny.gov/Economic-Development/Long-term-Industry-Projections/b7d6-zygf/about_data

```{r}
#| label: nysdol-occind-proj
#| eval: false

# https://dol.ny.gov/long-term-occupational-projections
# https://data.ny.gov/Economic-Development/Long-Term-Occupational-Projections/pqm4-9qqb/about_data
# https://data.ny.gov/Economic-Development/Long-term-Industry-Projections/b7d6-zygf/about_data

```

```{r stop_here, echo=FALSE}
knitr::knit_exit()
```